Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000 
ii. Business table = 10000 
iii. Category table = 10000 
iv. Checkin table = 10000 
v. elite_years table = 10000 
vi. friend table = 10000 
vii. hours table = 10000 
viii. photo table = 10000 
ix. review table = 10000 
x. tip table = 10000 
xi. user table = 10000 
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000 
ii. Hours = 1562 
iii. Category = 2643 
iv. Attribute = 1115 
v. Review = 10000 
vi. Checkin = 493 
vii. Photo = 10000 
viii. Tip = 537 , by foreign key of user_id
ix. User = 10000 
x. Friend = 11 
xi. Elite_years = 2780 

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	


3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

Answer: no
	
	
SQL code used to arrive at answer: 

SELECT *        
FROM  user
WHERE 	id is null
	OR name is null
	OR review_count is null
	OR yelping_since is null
	OR useful is null
	OR funny is null
	OR cool is null
	OR fans is null
	OR average_stars is null
	OR compliment_hot is null
	OR compliment_more is null
	OR compliment_profile is null
	OR compliment_cute is null
	OR compliment_list is null
	OR compliment_note is null
	OR compliment_plain is null
	OR compliment_cool is null
	OR compliment_funny is null
	OR compliment_writer is null
	OR compliment_photos is null
	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min: 1		max: 5		avg: 3.7082 
		
	
	ii. Table: Business, Column: Stars
	
		min: 1.0	max: 5.0	avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min: 0		max: 2		avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min: 1 	  	max: 53		avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min: 0		max: 2000	avg: 24.2995
		


5. List the cities with the most reviews in descending order:

SQL code used to arrive at answer: 

SELECT city, SUM(review_count) AS "Most Review"
FROM business
GROUP BY city
ORDER BY "Most Review" DESC
	
	
Copy and Paste the Result Below:

+-----------------+-------------+
| city            | Most Review |
+-----------------+-------------+
| Las Vegas       |       82854 |
| Phoenix         |       34503 |
| Toronto         |       24113 |
| Scottsdale      |       20614 |
| Charlotte       |       12523 |
| Henderson       |       10871 |
| Tempe           |       10504 |
| Pittsburgh      |        9798 |
| Montréal        |        9448 |
| Chandler        |        8112 |
| Mesa            |        6875 |
| Gilbert         |        6380 |
| Cleveland       |        5593 |
| Madison         |        5265 |
| Glendale        |        4406 |
| Mississauga     |        3814 |
| Edinburgh       |        2792 |
| Peoria          |        2624 |
| North Las Vegas |        2438 |
| Markham         |        2352 |
| Champaign       |        2029 |
| Stuttgart       |        1849 |
| Surprise        |        1520 |
| Lakewood        |        1465 |
| Goodyear        |        1155 |
+-----------------+-------------+
(Output limit exceeded, 25 of 362 total rows shown)

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

SELECT stars as "Star Rating", COUNT(stars) as "Count"
FROM business 
WHERE city = 'Avon'
GROUP BY stars


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):

+-------------+-------+
| Star Rating | Count |
+-------------+-------+
|         1.5 |     1 |
|         2.5 |     2 |
|         3.5 |     3 |
|         4.0 |     2 |
|         4.5 |     1 |
|         5.0 |     1 |
+-------------+-------+

ii. Beachwood

SQL code used to arrive at answer:

SELECT stars as "Star Rating", COUNT(stars) as "Count"
FROM business 
WHERE city = 'Beachwood'
GROUP BY stars

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
		
+-------------+-------+
| Star Rating | Count |
+-------------+-------+
|         2.0 |     1 |
|         2.5 |     1 |
|         3.0 |     2 |
|         3.5 |     2 |
|         4.0 |     1 |
|         4.5 |     2 |
|         5.0 |     5 |
+-------------+-------+

7. Find the top 3 users based on their total number of reviews:
		
SQL code used to arrive at answer:

SELECT name, review_count as total_review
FROM user
GROUP BY name
ORDER BY total_review DESC
LIMIT 3
		
Copy and Paste the Result Below:

+--------+--------------+
| name   | total_review |
+--------+--------------+
| Gerald |         2000 |
| .Hon   |         1246 |
| eric   |         1116 |
+--------+--------------+


8. Does posing more reviews correlate with more fans?

Please explain your findings and interpretation of the results:

+-----------+--------------+------+
| name      | review_count | fans |
+-----------+--------------+------+
| Amy       |          609 |  503 |
| Mimi      |          968 |  497 |
| Harald    |         1153 |  311 |
| Gerald    |         2000 |  253 |
| Christine |          930 |  173 |
| Lisa      |          813 |  159 |
| Cat       |          377 |  133 |
| William   |         1215 |  126 |
| Fran      |          862 |  124 |
| Lissa     |          834 |  120 |
+-----------+--------------+------+

Based on data that i found, it is clear that more reviews doesn't correlate with more fans. Because from data above, the top user with name amy only have review 609, beside harald have higher than her but have few fans.	

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

Answer:

+-----------+-----------+
| Love text | Hate_text |
+-----------+-----------+
|      1780 |       232 |
+-----------+-----------+
	
SQL code used to arrive at answer:

SELECT 
(SELECT COUNT(text) FROM review	WHERE text like "%love%") as "Love text",
 (SELECT COUNT(text) FROM review WHERE text like "%hate%") as "Hate_text"
					
	
10. Find the top 10 users with the most fans:

SQL code used to arrive at answer:

SELECT name,fans 
FROM user
ORDER BY fans DESC
LIMIT 10	
	
Copy and Paste the Result Below:

+-----------+------+
| name      | fans |
+-----------+------+
| Amy       |  503 |
| Mimi      |  497 |
| Harald    |  311 |
| Gerald    |  253 |
| Christine |  173 |
| Lisa      |  159 |
| Cat       |  133 |
| William   |  126 |
| Fran      |  124 |
| Lissa     |  120 |
+-----------+------+


Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.

	
i. Do the two groups you chose to analyze have a different distribution of hours? Yes


ii. Do the two groups you chose to analyze have a different number of reviews? Yes
         
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.

Based on data that have been retrieve, i infer that location could be 1 of many aspect that make an effect to star of the any category of business

SQL code used for analysis:

SELECT
b.name, b.city , c.category, b.stars, h.hours, b.review_count
FROM (business b INNER JOIN category c on b.id = c.business_id)
INNER JOIN hours h on h.business_id = c.business_id
WHERE b.city = 'Toronto' 
GROUP BY b.stars
	
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
   The business that still open have more review than the one is closed
         
ii. Difference 2:
   The business that still open have star higher than the one is closed
         
SQL code used for analysis:

SELECT
b.name, b.city , c.category, b.stars, h.hours, b.review_count, b.is_open
FROM (business b INNER JOIN category c on b.id = c.business_id) INNER JOIN hours h on h.business_id = c.business_id
WHERE b.city = 'Toronto' 
GROUP BY b.is_open
	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
         
Finding the correlation between the review accounts, the number of fans and the number of years each user has joined
 
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:

Data is needed in the form of the year each user joined and account reviews, the number of fans obtained from the users table. All this data is needed to see a comparison between the years and the number of reviews and fans they have. Does the longer the year you join indicates the more number of reviews and fans each user has or not
                           
                  
iii. Output of your finished dataset:
         
+---------+-------------+--------------+------+---------------+
| name    | Year joined | review_count | fans | average_stars |
+---------+-------------+--------------+------+---------------+
| Alex    | 2005        |           75 |    8 |          3.98 |
| Marc    | 2005        |           14 |    0 |          4.33 |
| Annie   | 2005        |          651 |   52 |           4.0 |
| Linda   | 2005        |          584 |   89 |          4.06 |
| Kelly   | 2005        |           71 |    4 |          3.36 |
| Robert  | 2005        |            4 |    1 |           4.2 |
| Trish   | 2005        |          354 |   13 |          3.95 |
| T       | 2005        |           40 |    3 |          3.49 |
| Sarah   | 2005        |          278 |   41 |          3.43 |
| Sam     | 2005        |          115 |   12 |          4.04 |
| Joc     | 2005        |          652 |   49 |          3.71 |
| C       | 2005        |          515 |   12 |          3.81 |
| Stacy   | 2005        |          118 |   13 |           4.4 |
| Steve   | 2006        |          166 |    6 |          3.42 |
| Dan     | 2006        |            8 |    0 |           3.5 |
| John    | 2006        |            3 |    0 |          4.75 |
| Desiree | 2006        |           16 |    1 |          2.62 |
| King    | 2006        |            4 |    0 |           4.0 |
| Lynda   | 2006        |          483 |   34 |          3.72 |
| Karen   | 2006        |          435 |   21 |          3.75 |
| phil    | 2006        |           75 |    0 |          2.38 |
| logi    | 2006        |            1 |    0 |           5.0 |
| Wesh    | 2006        |          419 |   12 |          3.68 |
| Liane   | 2006        |            7 |    0 |          4.14 |
| Mara    | 2006        |          256 |   11 |          3.97 |
+---------+-------------+--------------+------+---------------+
(Output limit exceeded, 25 of 10000 total rows shown)
         
iv. Provide the SQL code you used to create your final dataset:

SELECT
name, STRFTIME('%Y', yelping_since) as "Year joined", review_count, fans, average_stars
FROM user
ORDER BY "Year joined" asc
